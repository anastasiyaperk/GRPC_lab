# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import citiesGame_pb2 as citiesGame__pb2


class CitiesGameServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Greeter = channel.unary_unary(
                '/CitiesGameService/Greeter',
                request_serializer=citiesGame__pb2.UserName.SerializeToString,
                response_deserializer=citiesGame__pb2.UserReply.FromString,
                )
        self.LobbyReady = channel.unary_unary(
                '/CitiesGameService/LobbyReady',
                request_serializer=citiesGame__pb2.UserName.SerializeToString,
                response_deserializer=citiesGame__pb2.GameDone.FromString,
                )
        self.GameBody = channel.unary_unary(
                '/CitiesGameService/GameBody',
                request_serializer=citiesGame__pb2.UserGame.SerializeToString,
                response_deserializer=citiesGame__pb2.GameStatus.FromString,
                )
        self.CityName = channel.unary_unary(
                '/CitiesGameService/CityName',
                request_serializer=citiesGame__pb2.UserName.SerializeToString,
                response_deserializer=citiesGame__pb2.City.FromString,
                )


class CitiesGameServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Greeter(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LobbyReady(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GameBody(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CityName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CitiesGameServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Greeter': grpc.unary_unary_rpc_method_handler(
                    servicer.Greeter,
                    request_deserializer=citiesGame__pb2.UserName.FromString,
                    response_serializer=citiesGame__pb2.UserReply.SerializeToString,
            ),
            'LobbyReady': grpc.unary_unary_rpc_method_handler(
                    servicer.LobbyReady,
                    request_deserializer=citiesGame__pb2.UserName.FromString,
                    response_serializer=citiesGame__pb2.GameDone.SerializeToString,
            ),
            'GameBody': grpc.unary_unary_rpc_method_handler(
                    servicer.GameBody,
                    request_deserializer=citiesGame__pb2.UserGame.FromString,
                    response_serializer=citiesGame__pb2.GameStatus.SerializeToString,
            ),
            'CityName': grpc.unary_unary_rpc_method_handler(
                    servicer.CityName,
                    request_deserializer=citiesGame__pb2.UserName.FromString,
                    response_serializer=citiesGame__pb2.City.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'CitiesGameService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CitiesGameService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Greeter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CitiesGameService/Greeter',
            citiesGame__pb2.UserName.SerializeToString,
            citiesGame__pb2.UserReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LobbyReady(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CitiesGameService/LobbyReady',
            citiesGame__pb2.UserName.SerializeToString,
            citiesGame__pb2.GameDone.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GameBody(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CitiesGameService/GameBody',
            citiesGame__pb2.UserGame.SerializeToString,
            citiesGame__pb2.GameStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CityName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/CitiesGameService/CityName',
            citiesGame__pb2.UserName.SerializeToString,
            citiesGame__pb2.City.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
